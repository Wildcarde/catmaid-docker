services:
  db:
    image: postgis/postgis:17-3.5
    # build: db
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_PASSWORD: catmaid_password
      POSTGRES_USER: catmaid
      POSTGRES_DB: catmaid
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data

  app:
    image: catmaid/catmaid:latest
    restart: unless-stopped
    volumes:
      - ./volumes/app/static:/home/django/static
      - ./volumes/app/run:/var/run/catmaid:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      # set same as db credentials and dbname
      DB_HOST: db
      DB_USER: catmaid
      DB_PASS: catmaid_password
      DB_NAME: catmaid
      # Add example projects
      CM_EXAMPLE_PROJECTS: "true"
      # Adjust the maximum size in Bytes of imported skeletons
      #CM_IMPORTED_SKELETON_FILE_MAXIMUM_SIZE: 5242880
      # The IP to listen on
      #CM_HOST: "0.0.0.0"
      # The port to listen on
      #CM_PORT: 8000
      # Whether CATMAID's settings.py should be regenerated
      #CM_FORCE_CONFIG_UPDATE: "false"
      # Where CATMAID can write data to
      #CM_WRITEABLE_PATH: "/tmp"
      # The maximum number of nodes to fetch in one request
      #CM_NODE_LIMIT: 10000
      # Which node provider to use
      #CM_NODE_PROVIDERS: "['postgis2d']"
      # The subdirectory relative to the external domain root, no trailing or
      # leading slashes.
      #CM_SUBDIRECTORY: ""
      # Which sources to trust for CSRF protection, typically the external
      # domain, e.g. catmaid.example.com
      #CM_CSRF_TRUSTED_ORIGINS: ""
      # Default instance-wide client settings
      #CM_CLIENT_SETTINGS: ""
      # Whether or not to force setting the defined client settings, replaced
      # existing entries.
      #CM_FORCE_CLIENT_SETTINGS: "false"
    depends_on:
      - db

  web:
    build: web
    ports:
      - "8000:80"
      - "8443:443"
    restart: on-failure
    networks:
      - default
      - proxy
    volumes:
      # This directory must have cert files
      - ./volumes/web/cert:/cert:ro
      - ./volumes/app/static:/static:ro
      - ./volumes/app/run/:/sockets:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      # Basic HTTP authentication can be enabled by setting the environment
      # variable HTTP_AUTH_ENABLED to true and setting the environment variables
      # HTTP_AUTH_USER and HTTP_AUTH_PASS to the desired values.
      - HTTP_AUTH_ENABLED=false
      #- HTTP_AUTH_USER=catmaid
      #- HTTP_AUTH_PASS=secure_password
      # CORS access, enabled by default.
      - CORS_OPEN=true
    depends_on:
      - app
    

networks:
  default:
    driver_opts:
      com.docker.network.bridge.name: catmaid
  proxy:
    external: true
